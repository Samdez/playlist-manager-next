{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/utils/spotify.ts"],"sourcesContent":["import SpotifyWebApi from 'spotify-web-api-node';\n\nexport const spotifyApi = new SpotifyWebApi({\n\tclientId: process.env.SPOTIFY_CLIENT_ID,\n\tclientSecret: process.env.SPOTIFY_CLIENT_SECRET,\n\tredirectUri: process.env.SPOTIFY_REDIRECT_URI,\n});\n\nexport const scopes = [\n\t'user-read-private',\n\t'user-read-email',\n\t'playlist-read-private',\n\t'playlist-read-collaborative',\n];\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,aAAa,IAAI,wOAAA,CAAA,UAAa,CAAC;IAC3C,UAAU,QAAQ,GAAG,CAAC,iBAAiB;IACvC,cAAc,QAAQ,GAAG,CAAC,qBAAqB;IAC/C,aAAa,QAAQ,GAAG,CAAC,oBAAoB;AAC9C;AAEO,MAAM,SAAS;IACrB;IACA;IACA;IACA;CACA"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/my-playlists/page.tsx"],"sourcesContent":["import { redirect } from 'next/navigation';\nimport { spotifyApi } from '../utils/spotify';\nimport { cookies } from 'next/headers';\n\nexport default async function MyPlaylists({\n\tsearchParams,\n}: {\n\tsearchParams: { [key: string]: string | string[] | undefined };\n}) {\n\tconst code = searchParams['code'] as string;\n\n\tif (!code) {\n\t\tredirect('/authenticate');\n\t}\n\n\ttry {\n\t\tconst data = await spotifyApi.authorizationCodeGrant(code);\n\n\t\tconst cookieStore = await cookies();\n\t\tcookieStore.set({\n\t\t\tname: 'spotify_access_token',\n\t\t\tvalue: data.body.access_token,\n\t\t\tmaxAge: data.body.expires_in,\n\t\t\tsecure: process.env.NODE_ENV === 'production',\n\t\t\thttpOnly: true,\n\t\t});\n\n\t\tcookieStore.set({\n\t\t\tname: 'spotify_refresh_token',\n\t\t\tvalue: data.body.refresh_token,\n\t\t\tsecure: process.env.NODE_ENV === 'production',\n\t\t\thttpOnly: true,\n\t\t});\n\n\t\t// Set the access token\n\t\tspotifyApi.setAccessToken(data.body.access_token);\n\t\tspotifyApi.setRefreshToken(data.body.refresh_token);\n\n\t\tredirect('/user-playlists');\n\t} catch (error) {\n\t\tconsole.error('Authentication error:', error);\n\t\tredirect('/authenticate');\n\t}\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAFA;;;;AAIe,eAAe,YAAY,EACzC,YAAY,EAGZ;IACA,MAAM,OAAO,YAAY,CAAC,OAAO;IAEjC,IAAI,CAAC,MAAM;QACV,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACV;IAEA,IAAI;QACH,MAAM,OAAO,MAAM,uHAAA,CAAA,aAAU,CAAC,sBAAsB,CAAC;QAErD,MAAM,cAAc,MAAM,CAAA,GAAA,8PAAA,CAAA,UAAO,AAAD;QAChC,YAAY,GAAG,CAAC;YACf,MAAM;YACN,OAAO,KAAK,IAAI,CAAC,YAAY;YAC7B,QAAQ,KAAK,IAAI,CAAC,UAAU;YAC5B,QAAQ,oDAAyB;YACjC,UAAU;QACX;QAEA,YAAY,GAAG,CAAC;YACf,MAAM;YACN,OAAO,KAAK,IAAI,CAAC,aAAa;YAC9B,QAAQ,oDAAyB;YACjC,UAAU;QACX;QAEA,uBAAuB;QACvB,uHAAA,CAAA,aAAU,CAAC,cAAc,CAAC,KAAK,IAAI,CAAC,YAAY;QAChD,uHAAA,CAAA,aAAU,CAAC,eAAe,CAAC,KAAK,IAAI,CAAC,aAAa;QAElD,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACV,EAAE,OAAO,OAAO;QACf,QAAQ,KAAK,CAAC,yBAAyB;QACvC,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IACV;AACD"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}