{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/my-playlists/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/my-playlists/[id]/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/my-playlists/[id]/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA"}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/my-playlists/%5Bid%5D/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/my-playlists/[id]/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/my-playlists/[id]/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/client.ts"],"sourcesContent":["import { SpotifyApi } from '@spotify/web-api-ts-sdk';\n\nconst scopes = [\n\t'ugc-image-upload',\n\t'user-read-playback-state',\n\t'user-modify-playback-state',\n\t'user-read-currently-playing',\n\t'streaming',\n\t'app-remote-control',\n\t'user-read-email',\n\t'user-read-private',\n\t'playlist-read-collaborative',\n\t'playlist-modify-public',\n\t'playlist-read-private',\n\t'playlist-modify-private',\n\t'user-library-modify',\n\t'user-library-read',\n\t'user-top-read',\n\t'user-read-playback-position',\n\t'user-read-recently-played',\n\t'user-follow-read',\n\t'user-follow-modify',\n];\nexport const client = SpotifyApi.withUserAuthorization(\n\tprocess.env.NEXT_PUBLIC_SPOTIFY_CLIENT_ID!,\n\tprocess.env.NEXT_PUBLIC_REDIRECT_URI!,\n\tscopes\n);\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM,SAAS;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AACM,MAAM,SAAS,iLAAA,CAAA,aAAU,CAAC,qBAAqB,wIAGrD"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 93, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/utils.ts"],"sourcesContent":["import { Playlist, SpotifyApi } from '@spotify/web-api-ts-sdk';\nimport { IPlaylist } from './my-playlists/page';\n\nexport function shuffleTracks(playlist: IPlaylist) {\n\tconst shuffledPlaylist = {\n\t\t...playlist,\n\t\ttracks: {\n\t\t\t...playlist.tracks,\n\t\t\titems: [...playlist.tracks.items],\n\t\t},\n\t};\n\n\tfor (let i = shuffledPlaylist.tracks.items.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[shuffledPlaylist.tracks.items[i], shuffledPlaylist.tracks.items[j]] = [\n\t\t\tshuffledPlaylist.tracks.items[j],\n\t\t\tshuffledPlaylist.tracks.items[i],\n\t\t];\n\t}\n\treturn shuffledPlaylist;\n}\n\nexport function shufflePlaylist(playlist: IPlaylist) {\n\tif (playlist) {\n\t\tconst tracks = shuffleTracks(playlist);\n\t\treturn tracks;\n\t}\n}\nexport async function syncPlaylist(\n\tplaylistId: string,\n\tclient: SpotifyApi,\n\tplaylist: Playlist\n) {\n\ttry {\n\t\tawait client.playlists.removeItemsFromPlaylist(playlistId, {\n\t\t\ttracks: playlist?.tracks.items.map(t => ({ uri: t.track.uri })) || [],\n\t\t});\n\t\tawait client.playlists.addItemsToPlaylist(\n\t\t\tplaylistId,\n\t\t\tplaylist?.tracks.items.map(t => t.track.uri) || []\n\t\t);\n\t} catch (error) {\n\t\tif (error instanceof Error) {\n\t\t\tthrow new Error(error.message);\n\t\t}\n\t}\n}\n"],"names":[],"mappings":";;;;;AAGO,SAAS,cAAc,QAAmB;IAChD,MAAM,mBAAmB;QACxB,GAAG,QAAQ;QACX,QAAQ;YACP,GAAG,SAAS,MAAM;YAClB,OAAO;mBAAI,SAAS,MAAM,CAAC,KAAK;aAAC;QAClC;IACD;IAEA,IAAK,IAAI,IAAI,iBAAiB,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,GAAG,IAAK;QAClE,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC;QAC3C,CAAC,iBAAiB,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,iBAAiB,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;YACtE,iBAAiB,MAAM,CAAC,KAAK,CAAC,EAAE;YAChC,iBAAiB,MAAM,CAAC,KAAK,CAAC,EAAE;SAChC;IACF;IACA,OAAO;AACR;AAEO,SAAS,gBAAgB,QAAmB;IAClD,IAAI,UAAU;QACb,MAAM,SAAS,cAAc;QAC7B,OAAO;IACR;AACD;AACO,eAAe,aACrB,UAAkB,EAClB,MAAkB,EAClB,QAAkB;IAElB,IAAI;QACH,MAAM,OAAO,SAAS,CAAC,uBAAuB,CAAC,YAAY;YAC1D,QAAQ,UAAU,OAAO,MAAM,IAAI,CAAA,IAAK,CAAC;oBAAE,KAAK,EAAE,KAAK,CAAC,GAAG;gBAAC,CAAC,MAAM,EAAE;QACtE;QACA,MAAM,OAAO,SAAS,CAAC,kBAAkB,CACxC,YACA,UAAU,OAAO,MAAM,IAAI,CAAA,IAAK,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE;IAEpD,EAAE,OAAO,OAAO;QACf,IAAI,iBAAiB,OAAO;YAC3B,MAAM,IAAI,MAAM,MAAM,OAAO;QAC9B;IACD;AACD"}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/trigger/sync-playlist-task.ts"],"sourcesContent":["import { client } from '@/app/client';\nimport { shufflePlaylist, syncPlaylist } from '@/app/utils';\nimport { schedules } from '@trigger.dev/sdk/v3';\n\nexport const task = async (playlistId: string) =>\n\tschedules.task({\n\t\tid: `sync-playlist-task-${playlistId}`,\n\t\trun: async payload => {\n\t\t\tif (!payload.externalId) {\n\t\t\t\tthrow new Error('Playlist ID is required');\n\t\t\t}\n\t\t\t// shufflePlaylistTask(payload.externalId);\n\t\t\tconst playlist = await client.playlists.getPlaylist(payload.externalId);\n\t\t\tshufflePlaylist(playlist);\n\t\t\tsyncPlaylist(playlistId, client, playlist);\n\t\t},\n\t});\n// export const syncPlaylistEveryHourTask = schedules.task({\n// \tid: 'sync-playlist-every-hour-task',\n// \tcron: '0 * * * *',\n// \trun: async payload => {\n// \t\tif (!payload.externalId) {\n// \t\t\tthrow new Error('Playlist ID is required');\n// \t\t}\n// \t\tshufflePlaylistTask(payload.externalId);\n// \t},\n// });\n// export const syncPlaylistEveryDayTask = schedules.task({\n// \tid: 'sync-playlist-every-day-task',\n// \tcron: '0 0 * * *',\n// \trun: async payload => {\n// \t\tif (!payload.externalId) {\n// \t\t\tthrow new Error('Playlist ID is required');\n// \t\t}\n// \t\tshufflePlaylistTask(payload.externalId);\n// \t},\n// });\n// export const syncPlaylistEveryWeekTask = schedules.task({\n// \tid: 'sync-playlist-every-week-task',\n// \tcron: '0 0 * * 1',\n// \trun: async payload => {\n// \t\tif (!payload.externalId) {\n// \t\t\tthrow new Error('Playlist ID is required');\n// \t\t}\n// \t\tshufflePlaylistTask(payload.externalId);\n// \t},\n// });\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAAA;;;;AAEO,MAAM,OAAO,OAAO,aAC1B,uNAAA,CAAA,YAAS,CAAC,IAAI,CAAC;QACd,IAAI,CAAC,mBAAmB,EAAE,YAAY;QACtC,KAAK,OAAM;YACV,IAAI,CAAC,QAAQ,UAAU,EAAE;gBACxB,MAAM,IAAI,MAAM;YACjB;YACA,2CAA2C;YAC3C,MAAM,WAAW,MAAM,6GAAA,CAAA,SAAM,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,UAAU;YACtE,CAAA,GAAA,4GAAA,CAAA,kBAAe,AAAD,EAAE;YAChB,CAAA,GAAA,4GAAA,CAAA,eAAY,AAAD,EAAE,YAAY,6GAAA,CAAA,SAAM,EAAE;QAClC;IACD,IACD,4DAA4D;CAC5D,wCAAwC;CACxC,sBAAsB;CACtB,2BAA2B;CAC3B,+BAA+B;CAC/B,iDAAiD;CACjD,MAAM;CACN,6CAA6C;CAC7C,MAAM;CACN,MAAM;CACN,2DAA2D;CAC3D,uCAAuC;CACvC,sBAAsB;CACtB,2BAA2B;CAC3B,+BAA+B;CAC/B,iDAAiD;CACjD,MAAM;CACN,6CAA6C;CAC7C,MAAM;CACN,MAAM;CACN,4DAA4D;CAC5D,wCAAwC;CACxC,sBAAsB;CACtB,2BAA2B;CAC3B,+BAA+B;CAC/B,iDAAiD;CACjD,MAAM;CACN,6CAA6C;CAC7C,MAAM;CACN,MAAM"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/actions/add-cron.ts"],"sourcesContent":["'use server';\nimport { syncPlaylistTask } from '@/trigger/sync-playlist-task';\nimport { schedules } from '@trigger.dev/sdk/v3';\n\nconst getCronPerFrequency = (frequency: 'minute' | 'hour' | 'day' | 'week') => {\n\tswitch (frequency) {\n\t\tcase 'minute':\n\t\t\treturn '* * * * *';\n\t\tcase 'hour':\n\t\t\treturn '0 * * * *';\n\t\tcase 'day':\n\t\t\treturn '0 0 * * *';\n\t\tcase 'week':\n\t\t\treturn '0 0 * * 1';\n\t}\n};\nexport async function addCron(\n\tplaylistId: string,\n\tfrequency: 'minute' | 'hour' | 'day' | 'week'\n) {\n\tawait schedules.create({\n\t\ttask: syncPlaylistTask.id,\n\t\tcron: getCronPerFrequency(frequency),\n\t\tdeduplicationKey: `playlistId:${playlistId}`,\n\t});\n}\n"],"names":[],"mappings":";;;;;AACA;AACA;;AAAA;;;;;AAEA,MAAM,sBAAsB,CAAC;IAC5B,OAAQ;QACP,KAAK;YACJ,OAAO;QACR,KAAK;YACJ,OAAO;QACR,KAAK;YACJ,OAAO;QACR,KAAK;YACJ,OAAO;IACT;AACD;AACO,eAAe,uCAAK,GAAL,QACrB,UAAkB,EAClB,SAA6C;IAE7C,MAAM,uNAAA,CAAA,YAAS,CAAC,MAAM,CAAC;QACtB,MAAM,mIAAA,CAAA,mBAAgB,CAAC,EAAE;QACzB,MAAM,oBAAoB;QAC1B,kBAAkB,CAAC,WAAW,EAAE,YAAY;IAC7C;AACD;;;IATsB;;AAAA,+OAAA"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}