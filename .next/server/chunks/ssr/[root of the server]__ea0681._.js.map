{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/my-playlists/page.tsx"],"sourcesContent":["'use client';\nimport { usePathname } from 'next/navigation';\nimport SpotifyWebApi from 'spotify-web-api-node';\n\nconst extractCodeFromUrl = (url: string): string | null => {\n\tconst params = new URLSearchParams(url.split('?')[1]);\n\treturn params.get('code');\n};\n\nexport default function MyPlaylists({\n\tsearchParams,\n}: {\n\tsearchParams: Promise<{ [key: string]: string | string[] | undefined }>;\n}) {\n\tconst spotifyApi = new SpotifyWebApi({\n\t\tclientId: '0916ebedc8fe494699b4252738eb2444',\n\t\t// clientSecret: 'bf470b8b094245afb8799dcfa33f2645',\n\t\tredirectUri: 'http://localhost:3000/my-playlists',\n\t});\n\n\t// const authorizeUrl = spotifyApi.createAuthorizeURL(scopes, 'state');\n\t// console.log('ðŸš€ ~ MyPlaylists ~ authorizeUrl:', authorizeUrl);\n\tconsole.log(await searchParams);\n\n\tconst code = extractCodeFromUrl(pathname);\n\tconsole.log('ðŸš€ ~ MyPlaylists ~ code:', code);\n\tif (!code) {\n\t\treturn <div>No code found</div>;\n\t}\n\n\t// const token = spotifyApi.authorizationCodeGrant(code);\n\t// console.log('ðŸš€ ~ MyPlaylists ~ token:', token);\n\t// const token = await spotifyApi.clientCredentialsGrant();\n\t// console.log('ðŸš€ ~ MyPlaylists ~ token:', token);\n\t// const user = await spotifyApi.getUser();\n\t// const data = await spotifyApi.getUserPlaylists({});\n\n\t// console.log(data);\n\n\treturn <div>My Playlists: {code}</div>;\n}\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIA,MAAM,qBAAqB,CAAC;IAC3B,MAAM,SAAS,IAAI,gBAAgB,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;IACpD,OAAO,OAAO,GAAG,CAAC;AACnB;AAEe,SAAS,YAAY,EACnC,YAAY,EAGZ;IACA,MAAM,aAAa,IAAI,wOAAA,CAAA,UAAa,CAAC;QACpC,UAAU;QACV,oDAAoD;QACpD,aAAa;IACd;IAEA,uEAAuE;IACvE,iEAAiE;IACjE,QAAQ,GAAG,CAAC,MAAM;IAElB,MAAM,OAAO,mBAAmB;IAChC,QAAQ,GAAG,CAAC,4BAA4B;IACxC,IAAI,CAAC,MAAM;QACV,qBAAO,6WAAC;sBAAI;;;;;;IACb;IAEA,yDAAyD;IACzD,mDAAmD;IACnD,2DAA2D;IAC3D,mDAAmD;IACnD,2CAA2C;IAC3C,sDAAsD;IAEtD,qBAAqB;IAErB,qBAAO,6WAAC;;YAAI;YAAe;;;;;;;AAC5B"}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}