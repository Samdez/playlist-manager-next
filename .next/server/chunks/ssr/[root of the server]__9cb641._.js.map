{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/authenticate/page.tsx"],"sourcesContent":["'use client';\nimport { SpotifyApi } from '@spotify/web-api-ts-sdk';\nimport { useEffect } from 'react';\n\nexport const scopes = [\n\t'ugc-image-upload',\n\t'user-read-playback-state',\n\t'user-modify-playback-state',\n\t'user-read-currently-playing',\n\t'streaming',\n\t'app-remote-control',\n\t'user-read-email',\n\t'user-read-private',\n\t'playlist-read-collaborative',\n\t'playlist-modify-public',\n\t'playlist-read-private',\n\t'playlist-modify-private',\n\t'user-library-modify',\n\t'user-library-read',\n\t'user-top-read',\n\t'user-read-playback-position',\n\t'user-read-recently-played',\n\t'user-follow-read',\n\t'user-follow-modify',\n];\n\nexport default function MyPlaylists() {\n\tconst sdk = SpotifyApi.withUserAuthorization(\n\t\t'0916ebedc8fe494699b4252738eb2444',\n\t\t'http://localhost:3000/my-playlists',\n\t\tscopes\n\t);\n\tuseEffect(() => {\n\t\tconst authenticate = async () => {\n\t\t\tawait sdk.authenticate();\n\t\t\tconst user = await sdk.currentUser.profile();\n\t\t\tconsole.log('ðŸš€ ~ authenticate ~ user:', user);\n\t\t};\n\t\tauthenticate();\n\t}, []);\n\n\t// const authorizeUrl = sdk.getAuthorizeUrl();\n\n\t// return <Link href={authorizeUrl}>Login with Spotify</Link>;\n\n\t// const spotifyApi = new SpotifyWebApi({\n\t// \tclientId: '0916ebedc8fe494699b4252738eb2444',\n\t// \t// clientSecret: 'bf470b8b094245afb8799dcfa33f2645',\n\t// \tredirectUri: 'http://localhost:3000/my-playlists',\n\t// });\n\n\t// spotifyApi.setAccessToken('');\n\t// const authorizeUrl = spotifyApi.createAuthorizeURL(scopes, 'state');\n\n\t// return <Link href={authorizeUrl}>Login with Spotify</Link>;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AADA;AADA;;;AAIO,MAAM,SAAS;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAEc,SAAS;IACvB,MAAM,MAAM,kQAAA,CAAA,aAAU,CAAC,qBAAqB,CAC3C,oCACA,sCACA;IAED,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACT,MAAM,eAAe;YACpB,MAAM,IAAI,YAAY;YACtB,MAAM,OAAO,MAAM,IAAI,WAAW,CAAC,OAAO;YAC1C,QAAQ,GAAG,CAAC,6BAA6B;QAC1C;QACA;IACD,GAAG,EAAE;AAEL,8CAA8C;AAE9C,8DAA8D;AAE9D,yCAAyC;AACzC,iDAAiD;AACjD,wDAAwD;AACxD,sDAAsD;AACtD,MAAM;AAEN,iCAAiC;AACjC,uEAAuE;AAEvE,8DAA8D;AAC/D"}},
    {"offset": {"line": 99, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file:///Users/dezalduasamuel/Desktop/Code/playlist-manager-product/playlist-manager-next/app/my-playlists/page.tsx"],"sourcesContent":["'use client';\nimport { SpotifyApi } from '@spotify/web-api-ts-sdk';\nimport { useSearchParams } from 'next/navigation';\nimport { scopes } from '../authenticate/page';\nimport { useEffect } from 'react';\n// import { initClient } from './client';\n\nexport default function MyPlaylists() {\n\tconst params = useSearchParams();\n\tconst code = params.get('code');\n\tconst sdk = SpotifyApi.withUserAuthorization(\n\t\t'0916ebedc8fe494699b4252738eb2444',\n\t\t'http://localhost:3000/my-playlists',\n\t\tscopes\n\t);\n\tuseEffect(() => {\n\t\tconst getUser = async () => {\n\t\t\tconst user = await sdk.currentUser.profile();\n\t\t\tconsole.log('ðŸš€ ~ getUser ~ user:', user);\n\t\t\tconst playlists = await sdk.playlists.getUsersPlaylists(user.id);\n\t\t\tconsole.log('ðŸš€ ~ getUser ~ playlists:', playlists);\n\t\t};\n\t\tgetUser();\n\t}, []);\n\treturn <div>My Playlists</div>;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAHA;AADA;;;;;;AAOe,SAAS;IACvB,MAAM,SAAS,CAAA,GAAA,iQAAA,CAAA,kBAAe,AAAD;IAC7B,MAAM,OAAO,OAAO,GAAG,CAAC;IACxB,MAAM,MAAM,kQAAA,CAAA,aAAU,CAAC,qBAAqB,CAC3C,oCACA,sCACA,4HAAA,CAAA,SAAM;IAEP,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACT,MAAM,UAAU;YACf,MAAM,OAAO,MAAM,IAAI,WAAW,CAAC,OAAO;YAC1C,QAAQ,GAAG,CAAC,wBAAwB;YACpC,MAAM,YAAY,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,KAAK,EAAE;YAC/D,QAAQ,GAAG,CAAC,6BAA6B;QAC1C;QACA;IACD,GAAG,EAAE;IACL,qBAAO,6WAAC;kBAAI;;;;;;AACb"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}